/** example
 *
 * defaultQuery.add({page: 10}).toRouterQuery();
 */

요구사항)
1. router에 query를 넣어주고싶음.
2. 그런데 한 페이지에서 날리는 query가 다 비슷비슷함.
3. 그래서 자주쓰는 query는 따로 변수에 객체로 담아서 돌려쓰고싶음.

4. 그런데 다른페이지에서도 query가 다 비슷한데 약간씩 다름.
5. 그래서 query객체에 프로퍼티에 저장된값을 바꾸니 오히려 다른페이지에서 문제가 생겨버림.

==>
1. 자주쓰는 쿼리는 돌려쓰고싶음. 안전하게. 다른페이지에서 import해서 수정해도 영향받기싫음.
ㄴ	page번호 같이 매 쿼리마다 바뀌는 값도 안전하게 바뀌었으면 좋겠음.
	한 페이지 안에서 3번째 페이지 조회했다고 기본 페이지값이 3번으로 바뀌는일은 생기지않아야하니까.

2. import받은 쿼리를 안전하게 확장했으면 좋겠음.

'안전하다'
=> 다른페이지 영향안준다.

=> 유효하지않은 값이 할당되지 않는다.
예를들어 그냥날리는 title이런거는 아무거나 날려도 상관이없겠지만,
path?orderby=abc& 이런식으로 날리면 문제가 됨.
이런건 console.warn()으로 에러메시지를 띄울 수 있도록,
확장할 때 setter에서 체크를 할 수 있었으면 좋겠음.


구현)

1.
전개구문이, Javascript 잘 모르는 개발자가 보더라도
Object.assign()보다 훨~씬 직관적이라서 읽기 쉽지만,
문제는 setter를 호출해주지않음.

그래서 query 유효성검증을 추가해주고싶은 개발자를 위해서는
구현할 때 전개구문대신 Object.assign()을 사용해야함.


2.
확장하다
	==> 기존의 쿼리에서 몇개를 '추가'한다
	==> 아예 쿼리를 '새로' 만든다. 다른페이지 만들 때.


그러므로 '추가'하는 경우,
추가하는 프로퍼티가 기존의 쿼리의 프로퍼티와 겹치는게 있는 경우를 고려해야함.

add('propertyName', 'value')를 받아서
throw DuplicateError;를 하면서 replace()를 쓰라는 메시지를 보여주는 식으로 가던가, 다른식으로 가던가 고려가 필요함.
